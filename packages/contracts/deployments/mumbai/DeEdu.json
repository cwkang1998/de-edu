{
  "address": "0x9BE83268393089b917F1ACbfFA527a96Ce737077",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OnlySimulatedBackend",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "enrollmentId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "hashedMessage",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "name": "completeCourse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "courses",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "courseMaterial",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "courseEndDateTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "ended",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "deleted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "students",
              "type": "address[]"
            },
            {
              "internalType": "string",
              "name": "courseMaterial",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "stakeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "courseEndDateTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "ended",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "deleted",
              "type": "bool"
            }
          ],
          "internalType": "struct DeEdu.Course",
          "name": "courseData",
          "type": "tuple"
        }
      ],
      "name": "createCourse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "courseId",
          "type": "uint256"
        }
      ],
      "name": "deleteCourse",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "courseId",
          "type": "uint256"
        }
      ],
      "name": "enroll",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "courseId",
          "type": "uint256"
        }
      ],
      "name": "getCourse",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "students",
              "type": "address[]"
            },
            {
              "internalType": "string",
              "name": "courseMaterial",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "stakeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "courseEndDateTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "ended",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "deleted",
              "type": "bool"
            }
          ],
          "internalType": "struct DeEdu.Course",
          "name": "course",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserCreatedCourse",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "students",
              "type": "address[]"
            },
            {
              "internalType": "string",
              "name": "courseMaterial",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "stakeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "courseEndDateTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "ended",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "deleted",
              "type": "bool"
            }
          ],
          "internalType": "struct DeEdu.Course[]",
          "name": "userCreatedCourses",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserEnrolledCourse",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "students",
              "type": "address[]"
            },
            {
              "internalType": "string",
              "name": "courseMaterial",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "stakeAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "courseEndDateTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "ended",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "deleted",
              "type": "bool"
            }
          ],
          "internalType": "struct DeEdu.Course[]",
          "name": "userCourses",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "userDetailsURI",
          "type": "string"
        }
      ],
      "name": "signUpUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "userDetailsURI",
          "type": "string"
        }
      ],
      "name": "updateUserDetails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "usersMapping",
      "outputs": [
        {
          "internalType": "string",
          "name": "userDetailsURI",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xdeb242d5217638a19c4246d2756c24dd71a80b188c226043689a0bb72eb8fbe0",
  "receipt": {
    "to": null,
    "from": "0x7Cb241b2A896469A067a7DA5Ebd1D1974e5278C7",
    "contractAddress": "0x9BE83268393089b917F1ACbfFA527a96Ce737077",
    "transactionIndex": 28,
    "gasUsed": "3023965",
    "logsBloom": "0x
    "blockHash": "0x59f24554c06ce0c8ca1ac0bc91da807416aae86d7dc5da3dedaf1d68db933b8d",
    "transactionHash": "0xdeb242d5217638a19c4246d2756c24dd71a80b188c226043689a0bb72eb8fbe0",
    "logs": [
      {
        "transactionIndex": 28,
        "blockNumber": 29221471,
        "transactionHash": "0xdeb242d5217638a19c4246d2756c24dd71a80b188c226043689a0bb72eb8fbe0",
        "address": "0x9BE83268393089b917F1ACbfFA527a96Ce737077",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007cb241b2a896469a067a7da5ebd1d1974e5278c7"
        ],
        "data": "0x",
        "logIndex": 103,
        "blockHash": "0x59f24554c06ce0c8ca1ac0bc91da807416aae86d7dc5da3dedaf1d68db933b8d"
      },
      {
        "transactionIndex": 28,
        "blockNumber": 29221471,
        "transactionHash": "0xdeb242d5217638a19c4246d2756c24dd71a80b188c226043689a0bb72eb8fbe0",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000007cb241b2a896469a067a7da5ebd1d1974e5278c7",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000101d6b9346eea30000000000000000000000000000000000000000000000001a4b4c74f6c60293000000000000000000000000000000000000000000000b0571e5ca24948fce780000000000000000000000000000000000000000000000001a3b2f09637f13f0000000000000000000000000000000000000000000000b0571f5e79027d6bd1b",
        "logIndex": 104,
        "blockHash": "0x59f24554c06ce0c8ca1ac0bc91da807416aae86d7dc5da3dedaf1d68db933b8d"
      }
    ],
    "blockNumber": 29221471,
    "cumulativeGasUsed": "16398734",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "baa8a1cee7474c9f67f7acf102dc1939",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"enrollmentId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hashedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"completeCourse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"courses\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"courseMaterial\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"courseEndDateTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"students\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"courseMaterial\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"courseEndDateTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"}],\"internalType\":\"struct DeEdu.Course\",\"name\":\"courseData\",\"type\":\"tuple\"}],\"name\":\"createCourse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"courseId\",\"type\":\"uint256\"}],\"name\":\"deleteCourse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"courseId\",\"type\":\"uint256\"}],\"name\":\"enroll\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"courseId\",\"type\":\"uint256\"}],\"name\":\"getCourse\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"students\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"courseMaterial\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"courseEndDateTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"}],\"internalType\":\"struct DeEdu.Course\",\"name\":\"course\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserCreatedCourse\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"students\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"courseMaterial\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"courseEndDateTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"}],\"internalType\":\"struct DeEdu.Course[]\",\"name\":\"userCreatedCourses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserEnrolledCourse\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"students\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"courseMaterial\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"courseEndDateTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"deleted\",\"type\":\"bool\"}],\"internalType\":\"struct DeEdu.Course[]\",\"name\":\"userCourses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"userDetailsURI\",\"type\":\"string\"}],\"name\":\"signUpUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"userDetailsURI\",\"type\":\"string\"}],\"name\":\"updateUserDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usersMapping\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"userDetailsURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DeEduCore.sol\":\"DeEdu\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/AutomationCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AutomationBase.sol\\\";\\nimport \\\"./interfaces/AutomationCompatibleInterface.sol\\\";\\n\\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\\n\",\"keccak256\":\"0x40e5ae0eff4edd0740c1b5590d09c344f84dee031e82d5294563e99603774f80\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"contracts/DeEduCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\nimport '@openzeppelin/contracts/utils/Counters.sol';\\nimport '@chainlink/contracts/src/v0.8/AutomationCompatible.sol';\\n\\ncontract DeEdu is Ownable, AutomationCompatible {\\n  struct Course {\\n    string name;\\n    address author;\\n    address[] students;\\n    string courseMaterial;\\n    uint256 stakeAmount;\\n    uint256 courseEndDateTime;\\n    bool ended;\\n    bool deleted;\\n  }\\n\\n  struct User {\\n    string userDetailsURI; // User profile information\\n    uint256[] enrolledCourses;\\n    uint256[] completedCourses;\\n    uint256[] createdCourses;\\n    bool exists;\\n  }\\n\\n  Course[] public courses;\\n\\n  mapping(address => User) public usersMapping;\\n\\n  constructor() {\\n    // A null course to remove courses.\\n    courses.push(\\n      Course({\\n        name: 'Null course',\\n        author: address(0),\\n        students: new address[](0),\\n        courseMaterial: '',\\n        stakeAmount: 0,\\n        courseEndDateTime: 0,\\n        ended: true,\\n        deleted: true\\n      })\\n    );\\n  }\\n\\n  // --- User ---\\n\\n  function signUpUser(string calldata userDetailsURI) external {\\n    User memory user = _getUser(msg.sender);\\n    require(!user.exists);\\n    user.userDetailsURI = userDetailsURI;\\n    user.exists = true;\\n    usersMapping[msg.sender] = user;\\n  }\\n\\n  function updateUserDetails(string calldata userDetailsURI) external {\\n    require(_getUser(msg.sender).exists);\\n    _getUser(msg.sender).userDetailsURI = userDetailsURI;\\n  }\\n\\n  // --- Courses ---\\n  function getUserEnrolledCourse() external view returns (Course[] memory userCourses) {\\n    User storage user = _getUser(msg.sender);\\n    userCourses = new Course[](user.enrolledCourses.length);\\n    for (uint8 i = 0; i < user.enrolledCourses.length; i++) {\\n      if (user.enrolledCourses[i] != 0) {\\n        userCourses[i] = courses[user.enrolledCourses[i]];\\n      }\\n    }\\n  }\\n\\n  function getUserCreatedCourse() external view returns (Course[] memory userCreatedCourses) {\\n    User storage user = _getUser(msg.sender);\\n    userCreatedCourses = new Course[](user.createdCourses.length);\\n    for (uint8 i = 0; i < user.createdCourses.length; i++) {\\n      if (user.createdCourses[i] != 0) {\\n        userCreatedCourses[i] = courses[user.createdCourses[i]];\\n      }\\n    }\\n  }\\n\\n  function getCourse(uint256 courseId) external view returns (Course memory course) {\\n    course = _getCourse(courseId);\\n  }\\n\\n  function createCourse(Course calldata courseData) external {\\n    User storage user = _getUser(msg.sender);\\n    courses.push(courseData);\\n    user.createdCourses.push(courses.length - 1);\\n  }\\n\\n  function deleteCourse(uint256 courseId) external {\\n    require(\\n      msg.sender == _getCourse(courseId).author,\\n      'Only author allowed to delete their course'\\n    );\\n    _getCourse(courseId).deleted = true;\\n  }\\n\\n  function enroll(uint256 courseId) external payable {\\n    User storage user = _getUser(msg.sender);\\n    require(courseId < courses.length, 'Invalid courseId');\\n    require(!courses[courseId].deleted, 'Course deleted');\\n    user.enrolledCourses.push(courseId);\\n  }\\n\\n  function completeCourse(\\n    uint256 enrollmentId,\\n    bytes calldata hashedMessage,\\n    bytes32 r,\\n    bytes32 s,\\n    uint8 v\\n  ) external {\\n    bytes memory prefix = '\\\\x19Ethereum Signed Message:\\\\n32';\\n    bytes32 prefixedHashMessage = keccak256(abi.encodePacked(prefix, hashedMessage));\\n    address signer = ecrecover(prefixedHashMessage, v, r, s);\\n\\n    require(signer == msg.sender, 'Invalid signature');\\n    _getUser(msg.sender).completedCourses.push(enrollmentId);\\n  }\\n\\n  // this function can be called by student, and the liquidator, so msg.sender is not a legit way of\\n  function exitCourse(uint256 enrollmentId) internal {\\n    require(_getUser(msg.sender).enrolledCourses[enrollmentId] != 0);\\n    _getUser(msg.sender).enrolledCourses[enrollmentId] = 0;\\n  }\\n\\n  // -- Progress checking and certification issurance --\\n\\n  function checkUpkeep(\\n    bytes calldata /* checkData */\\n  )\\n    external\\n    view\\n    override\\n    returns (\\n      bool upkeepNeeded,\\n      bytes memory /* performData */\\n    )\\n  {\\n    for (uint8 i = 1; i < courses.length; i++) {\\n      if (block.timestamp > courses[i].courseEndDateTime) {\\n        upkeepNeeded = true;\\n        break;\\n      }\\n    }\\n  }\\n\\n  function performUpkeep(\\n    bytes calldata /* performData */\\n  ) external override {\\n    for (uint8 i = 1; i < courses.length; i++) {\\n      if (block.timestamp > courses[i].courseEndDateTime && !courses[i].deleted) {\\n        courses[i].ended = true;\\n      }\\n    }\\n  }\\n\\n  // -- Internal private function\\n  function _getUser(address userAddress) internal view returns (User storage) {\\n    return usersMapping[userAddress];\\n  }\\n\\n  function _getCourse(uint256 courseId) internal view returns (Course storage) {\\n    require(courseId < courses.length);\\n    return courses[courseId];\\n  }\\n}\\n\",\"keccak256\":\"0x9b69121d2d3f21e4bef0b20e2b70f79d8aa6c78805b950686e89ac28814ba24e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5062000032620000266200024760201b60201c565b6200024f60201b60201c565b60016040518061010001604052806040518060400160405280600b81526020017f4e756c6c20636f757273650000000000000000000000000000000000000000008152508152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff811115620000b657620000b562000452565b5b604051908082528060200260200182016040528015620000e55781602001602082028036833780820191505090505b508152602001604051806020016040528060008152508152602001600081526020016000815260200160011515815260200160011515815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000190805190602001906200016592919062000313565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190620001cb929190620003a4565b506060820151816003019080519060200190620001ea92919062000313565b506080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555060e08201518160060160016101000a81548160ff0219169083151502179055505050620004e6565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546200032190620004b0565b90600052602060002090601f01602090048101928262000345576000855562000391565b82601f106200036057805160ff191683800117855562000391565b8280016001018555821562000391579182015b828111156200039057825182559160200191906001019062000373565b5b509050620003a0919062000433565b5090565b82805482825590600052602060002090810192821562000420579160200282015b828111156200041f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620003c5565b5b5090506200042f919062000433565b5090565b5b808211156200044e57600081600090555060010162000434565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004c957607f821691505b60208210811415620004e057620004df62000481565b5b50919050565b6133a680620004f66000396000f3fe6080604052600436106100f35760003560e01c80638af92aca1161008a5780639d7eb375116100595780639d7eb375146103305780639dad8d2214610359578063f2fde38b14610382578063f57d585b146103ab576100f3565b80638af92aca1461026e5780638da5cb5b1461029757806396f979d2146102c257806397f6c23e14610305576100f3565b806348ab214a116100c657806348ab214a146101b057806367100e88146101ee5780636e04ff0d14610219578063715018a614610257576100f3565b80630b91e28d146100f857806334e85f7814610135578063450043101461015e5780634585e33b14610187575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a9190611c95565b6103c7565b60405161012c9190611f33565b60405180910390f35b34801561014157600080fd5b5061015c60048036038101906101579190612029565b61063d565b005b34801561016a57600080fd5b5061018560048036038101906101809190612119565b6107a5565b005b34801561019357600080fd5b506101ae60048036038101906101a99190612166565b610abb565b005b3480156101bc57600080fd5b506101d760048036038101906101d291906121df565b610b9a565b6040516101e5929190612265565b60405180910390f35b3480156101fa57600080fd5b50610203610c53565b6040516102109190612415565b60405180910390f35b34801561022557600080fd5b50610240600480360381019061023b9190612166565b610fdc565b60405161024e92919061248c565b60405180910390f35b34801561026357600080fd5b5061026c61104b565b005b34801561027a57600080fd5b50610295600480360381019061029091906124e1565b61105f565b005b3480156102a357600080fd5b506102ac6110e5565b6040516102b99190612539565b60405180910390f35b3480156102ce57600080fd5b506102e960048036038101906102e49190611c95565b61110e565b6040516102fc9796959493929190612563565b60405180910390f35b34801561031157600080fd5b5061031a6112aa565b6040516103279190612415565b60405180910390f35b34801561033c57600080fd5b5061035760048036038101906103529190612119565b611633565b005b34801561036557600080fd5b50610380600480360381019061037b9190611c95565b611676565b005b34801561038e57600080fd5b506103a960048036038101906103a491906121df565b611738565b005b6103c560048036038101906103c09190611c95565b6117bc565b005b6103cf611a80565b6103d8826118b2565b604051806101000160405290816000820180546103f49061260f565b80601f01602080910402602001604051908101604052809291908181526020018280546104209061260f565b801561046d5780601f106104425761010080835404028352916020019161046d565b820191906000526020600020905b81548152906001019060200180831161045057829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561055157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610507575b5050505050815260200160038201805461056a9061260f565b80601f01602080910402602001604051908101604052809291908181526020018280546105969061260f565b80156105e35780601f106105b8576101008083540402835291602001916105e3565b820191906000526020600020905b8154815290600101906020018083116105c657829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff1615151515815250509050919050565b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152509050600081878760405160200161068e939291906126b1565b6040516020818303038152906040528051906020012090506000600182858888604051600081526020016040526040516106cb94939291906126f5565b6020604051602081039080840390855afa1580156106ed573d6000803e3d6000fd5b5050506020604051035190503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075e90612786565b60405180910390fd5b610770336118ee565b600201899080600181540180825580915050600190039060005260206000200160009091909190915055505050505050505050565b60006107b0336118ee565b6040518060a00160405290816000820180546107cb9061260f565b80601f01602080910402602001604051908101604052809291908181526020018280546107f79061260f565b80156108445780601f1061081957610100808354040283529160200191610844565b820191906000526020600020905b81548152906001019060200180831161082757829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561089c57602002820191906000526020600020905b815481526020019060010190808311610888575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156108f457602002820191906000526020600020905b8154815260200190600101908083116108e0575b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561094c57602002820191906000526020600020905b815481526020019060010190808311610938575b505050505081526020016004820160009054906101000a900460ff161515151581525050905080608001511561098157600080fd5b82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508160000181905250600181608001901515908115158152505080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610a3b929190611adf565b506020820151816001019080519060200190610a58929190611b65565b506040820151816002019080519060200190610a75929190611b65565b506060820151816003019080519060200190610a92929190611b65565b5060808201518160040160006101000a81548160ff021916908315150217905550905050505050565b6000600190505b6001805490508160ff161015610b955760018160ff1681548110610ae957610ae86127a6565b5b90600052602060002090600702016005015442118015610b3c575060018160ff1681548110610b1b57610b1a6127a6565b5b906000526020600020906007020160060160019054906101000a900460ff16155b15610b82576001808260ff1681548110610b5957610b586127a6565b5b906000526020600020906007020160060160006101000a81548160ff0219169083151502179055505b8080610b8d90612804565b915050610ac2565b505050565b6002602052806000526040600020600091509050806000018054610bbd9061260f565b80601f0160208091040260200160405190810160405280929190818152602001828054610be99061260f565b8015610c365780601f10610c0b57610100808354040283529160200191610c36565b820191906000526020600020905b815481529060010190602001808311610c1957829003601f168201915b5050505050908060040160009054906101000a900460ff16905082565b60606000610c60336118ee565b9050806001018054905067ffffffffffffffff811115610c8357610c8261282e565b5b604051908082528060200260200182016040528015610cbc57816020015b610ca9611a80565b815260200190600190039081610ca15790505b50915060005b81600101805490508160ff161015610fd7576000826001018260ff1681548110610cef57610cee6127a6565b5b906000526020600020015414610fc4576001826001018260ff1681548110610d1a57610d196127a6565b5b906000526020600020015481548110610d3657610d356127a6565b5b906000526020600020906007020160405180610100016040529081600082018054610d609061260f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8c9061260f565b8015610dd95780601f10610dae57610100808354040283529160200191610dd9565b820191906000526020600020905b815481529060010190602001808311610dbc57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015610ebd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e73575b50505050508152602001600382018054610ed69061260f565b80601f0160208091040260200160405190810160405280929190818152602001828054610f029061260f565b8015610f4f5780601f10610f2457610100808354040283529160200191610f4f565b820191906000526020600020905b815481529060010190602001808311610f3257829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff161515151581525050838260ff1681518110610fb857610fb76127a6565b5b60200260200101819052505b8080610fcf90612804565b915050610cc2565b505090565b600060606000600190505b6001805490508160ff1610156110435760018160ff168154811061100e5761100d6127a6565b5b9060005260206000209060070201600501544211156110305760019250611043565b808061103b90612804565b915050610fe7565b509250929050565b611053611936565b61105d60006119b4565b565b600061106a336118ee565b9050600182908060018154018082558091505060019003906000526020600020906007020160009091909190915081816110a491906130c6565b505080600301600180805490506110bb91906130d4565b90806001815401808255809150506001900390600052602060002001600090919091909150555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001818154811061111e57600080fd5b90600052602060002090600702016000915090508060000180546111419061260f565b80601f016020809104026020016040519081016040528092919081815260200182805461116d9061260f565b80156111ba5780601f1061118f576101008083540402835291602001916111ba565b820191906000526020600020905b81548152906001019060200180831161119d57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030180546111f59061260f565b80601f01602080910402602001604051908101604052809291908181526020018280546112219061260f565b801561126e5780601f106112435761010080835404028352916020019161126e565b820191906000526020600020905b81548152906001019060200180831161125157829003601f168201915b5050505050908060040154908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905087565b606060006112b7336118ee565b9050806003018054905067ffffffffffffffff8111156112da576112d961282e565b5b60405190808252806020026020018201604052801561131357816020015b611300611a80565b8152602001906001900390816112f85790505b50915060005b81600301805490508160ff16101561162e576000826003018260ff1681548110611346576113456127a6565b5b90600052602060002001541461161b576001826003018260ff1681548110611371576113706127a6565b5b90600052602060002001548154811061138d5761138c6127a6565b5b9060005260206000209060070201604051806101000160405290816000820180546113b79061260f565b80601f01602080910402602001604051908101604052809291908181526020018280546113e39061260f565b80156114305780601f1061140557610100808354040283529160200191611430565b820191906000526020600020905b81548152906001019060200180831161141357829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561151457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114ca575b5050505050815260200160038201805461152d9061260f565b80601f01602080910402602001604051908101604052809291908181526020018280546115599061260f565b80156115a65780601f1061157b576101008083540402835291602001916115a6565b820191906000526020600020905b81548152906001019060200180831161158957829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff161515151581525050838260ff168151811061160f5761160e6127a6565b5b60200260200101819052505b808061162690612804565b915050611319565b505090565b61163c336118ee565b60040160009054906101000a900460ff1661165657600080fd5b8181611661336118ee565b6000019190611671929190611bb2565b505050565b61167f816118b2565b60010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611710576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117079061317a565b60405180910390fd5b600161171b826118b2565b60060160016101000a81548160ff02191690831515021790555050565b611740611936565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a79061320c565b60405180910390fd5b6117b9816119b4565b50565b60006117c7336118ee565b90506001805490508210611810576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180790613278565b60405180910390fd5b60018281548110611824576118236127a6565b5b906000526020600020906007020160060160019054906101000a900460ff1615611883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187a906132e4565b60405180910390fd5b806001018290806001815401808255809150506001900390600052602060002001600090919091909150555050565b600060018054905082106118c557600080fd5b600182815481106118d9576118d86127a6565b5b90600052602060002090600702019050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050919050565b61193e611a78565b73ffffffffffffffffffffffffffffffffffffffff1661195c6110e5565b73ffffffffffffffffffffffffffffffffffffffff16146119b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a990613350565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160008152602001600081526020016000151581526020016000151581525090565b828054611aeb9061260f565b90600052602060002090601f016020900481019282611b0d5760008555611b54565b82601f10611b2657805160ff1916838001178555611b54565b82800160010185558215611b54579182015b82811115611b53578251825591602001919060010190611b38565b5b509050611b619190611c38565b5090565b828054828255906000526020600020908101928215611ba1579160200282015b82811115611ba0578251825591602001919060010190611b85565b5b509050611bae9190611c38565b5090565b828054611bbe9061260f565b90600052602060002090601f016020900481019282611be05760008555611c27565b82601f10611bf957803560ff1916838001178555611c27565b82800160010185558215611c27579182015b82811115611c26578235825591602001919060010190611c0b565b5b509050611c349190611c38565b5090565b5b80821115611c51576000816000905550600101611c39565b5090565b600080fd5b600080fd5b6000819050919050565b611c7281611c5f565b8114611c7d57600080fd5b50565b600081359050611c8f81611c69565b92915050565b600060208284031215611cab57611caa611c55565b5b6000611cb984828501611c80565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611cfc578082015181840152602081019050611ce1565b83811115611d0b576000848401525b50505050565b6000601f19601f8301169050919050565b6000611d2d82611cc2565b611d378185611ccd565b9350611d47818560208601611cde565b611d5081611d11565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d8682611d5b565b9050919050565b611d9681611d7b565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611dd48383611d8d565b60208301905092915050565b6000602082019050919050565b6000611df882611d9c565b611e028185611da7565b9350611e0d83611db8565b8060005b83811015611e3e578151611e258882611dc8565b9750611e3083611de0565b925050600181019050611e11565b5085935050505092915050565b611e5481611c5f565b82525050565b60008115159050919050565b611e6f81611e5a565b82525050565b6000610100830160008301518482036000860152611e938282611d22565b9150506020830151611ea86020860182611d8d565b5060408301518482036040860152611ec08282611ded565b91505060608301518482036060860152611eda8282611d22565b9150506080830151611eef6080860182611e4b565b5060a0830151611f0260a0860182611e4b565b5060c0830151611f1560c0860182611e66565b5060e0830151611f2860e0860182611e66565b508091505092915050565b60006020820190508181036000830152611f4d8184611e75565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611f7a57611f79611f55565b5b8235905067ffffffffffffffff811115611f9757611f96611f5a565b5b602083019150836001820283011115611fb357611fb2611f5f565b5b9250929050565b6000819050919050565b611fcd81611fba565b8114611fd857600080fd5b50565b600081359050611fea81611fc4565b92915050565b600060ff82169050919050565b61200681611ff0565b811461201157600080fd5b50565b60008135905061202381611ffd565b92915050565b60008060008060008060a0878903121561204657612045611c55565b5b600061205489828a01611c80565b965050602087013567ffffffffffffffff81111561207557612074611c5a565b5b61208189828a01611f64565b9550955050604061209489828a01611fdb565b93505060606120a589828a01611fdb565b92505060806120b689828a01612014565b9150509295509295509295565b60008083601f8401126120d9576120d8611f55565b5b8235905067ffffffffffffffff8111156120f6576120f5611f5a565b5b60208301915083600182028301111561211257612111611f5f565b5b9250929050565b600080602083850312156121305761212f611c55565b5b600083013567ffffffffffffffff81111561214e5761214d611c5a565b5b61215a858286016120c3565b92509250509250929050565b6000806020838503121561217d5761217c611c55565b5b600083013567ffffffffffffffff81111561219b5761219a611c5a565b5b6121a785828601611f64565b92509250509250929050565b6121bc81611d7b565b81146121c757600080fd5b50565b6000813590506121d9816121b3565b92915050565b6000602082840312156121f5576121f4611c55565b5b6000612203848285016121ca565b91505092915050565b600082825260208201905092915050565b600061222882611cc2565b612232818561220c565b9350612242818560208601611cde565b61224b81611d11565b840191505092915050565b61225f81611e5a565b82525050565b6000604082019050818103600083015261227f818561221d565b905061228e6020830184612256565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006101008301600083015184820360008601526122df8282611d22565b91505060208301516122f46020860182611d8d565b506040830151848203604086015261230c8282611ded565b915050606083015184820360608601526123268282611d22565b915050608083015161233b6080860182611e4b565b5060a083015161234e60a0860182611e4b565b5060c083015161236160c0860182611e66565b5060e083015161237460e0860182611e66565b508091505092915050565b600061238b83836122c1565b905092915050565b6000602082019050919050565b60006123ab82612295565b6123b581856122a0565b9350836020820285016123c7856122b1565b8060005b8581101561240357848403895281516123e4858261237f565b94506123ef83612393565b925060208a019950506001810190506123cb565b50829750879550505050505092915050565b6000602082019050818103600083015261242f81846123a0565b905092915050565b600081519050919050565b600082825260208201905092915050565b600061245e82612437565b6124688185612442565b9350612478818560208601611cde565b61248181611d11565b840191505092915050565b60006040820190506124a16000830185612256565b81810360208301526124b38184612453565b90509392505050565b600080fd5b600061010082840312156124d8576124d76124bc565b5b81905092915050565b6000602082840312156124f7576124f6611c55565b5b600082013567ffffffffffffffff81111561251557612514611c5a565b5b612521848285016124c1565b91505092915050565b61253381611d7b565b82525050565b600060208201905061254e600083018461252a565b92915050565b61255d81611c5f565b82525050565b600060e082019050818103600083015261257d818a61221d565b905061258c602083018961252a565b818103604083015261259e818861221d565b90506125ad6060830187612554565b6125ba6080830186612554565b6125c760a0830185612256565b6125d460c0830184612256565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061262757607f821691505b6020821081141561263b5761263a6125e0565b5b50919050565b600081905092915050565b600061265782612437565b6126618185612641565b9350612671818560208601611cde565b80840191505092915050565b82818337600083830152505050565b60006126988385612641565b93506126a583858461267d565b82840190509392505050565b60006126bd828661264c565b91506126ca82848661268c565b9150819050949350505050565b6126e081611fba565b82525050565b6126ef81611ff0565b82525050565b600060808201905061270a60008301876126d7565b61271760208301866126e6565b61272460408301856126d7565b61273160608301846126d7565b95945050505050565b7f496e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b600061277060118361220c565b915061277b8261273a565b602082019050919050565b6000602082019050818103600083015261279f81612763565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061280f82611ff0565b915060ff821415612823576128226127d5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126128895761288861285d565b5b80840192508235915067ffffffffffffffff8211156128ab576128aa612862565b5b6020830192506001820236038313156128c7576128c6612867565b5b509250929050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261293c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826128ff565b61294686836128ff565b95508019841693508086168417925050509392505050565b6000819050919050565b600061298361297e61297984611c5f565b61295e565b611c5f565b9050919050565b6000819050919050565b61299d83612968565b6129b16129a98261298a565b84845461290c565b825550505050565b600090565b6129c66129b9565b6129d1818484612994565b505050565b5b818110156129f5576129ea6000826129be565b6001810190506129d7565b5050565b601f821115612a3a57612a0b816128da565b612a14846128ef565b81016020851015612a23578190505b612a37612a2f856128ef565b8301826129d6565b50505b505050565b600082821c905092915050565b6000612a5d60001984600802612a3f565b1980831691505092915050565b6000612a768383612a4c565b9150826002028217905092915050565b612a9083836128cf565b67ffffffffffffffff811115612aa957612aa861282e565b5b612ab3825461260f565b612abe8282856129f9565b6000601f831160018114612aed5760008415612adb578287013590505b612ae58582612a6a565b865550612b4d565b601f198416612afb866128da565b60005b82811015612b2357848901358255600182019150602085019450602081019050612afe565b86831015612b405784890135612b3c601f891682612a4c565b8355505b6001600288020188555050505b50505050505050565b612b61838383612a86565b505050565b60008135612b73816121b3565b80915050919050565b60008160001b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff612ba984612b7c565b9350801983169250808416831791505092915050565b6000612bda612bd5612bd084611d5b565b61295e565b611d5b565b9050919050565b6000612bec82612bbf565b9050919050565b6000612bfe82612be1565b9050919050565b6000819050919050565b612c1882612bf3565b612c2b612c2482612c05565b8354612b89565b8255505050565b60008083356001602003843603038112612c4f57612c4e61285d565b5b80840192508235915067ffffffffffffffff821115612c7157612c70612862565b5b602083019250602082023603831315612c8d57612c8c612867565b5b509250929050565b6000819050919050565b600081549050919050565b60008190506001806001038301049050919050565b60008190508160005260206000209050919050565b5b81811015612cf357612ce86000826129be565b600181019050612cd5565b5050565b81831015612d3057612d0882612caa565b612d1184612caa565b612d1a83612cbf565b818101838201612d2a8183612cd4565b50505050505b505050565b68010000000000000000821115612d4f57612d4e61282e565b5b612d5881612c9f565b828255612d66838284612cf7565b505050565b600082905092915050565b600060088302612d9a73ffffffffffffffffffffffffffffffffffffffff826128ff565b612da486836128ff565b95508019841693508086168417925050509392505050565b612dc583612bf3565b612dd9612dd182612c05565b848454612d76565b825550505050565b612deb8383612d6b565b612df58183612d35565b612dfe83612c95565b612e0783612cbf565b6000805b84811015612e425783612e1d81612b66565b9050612e2a818486612dbc565b60208501945060018401935050600181019050612e0b565b5050505050505050565b612e57838383612de1565b505050565b60008135612e6981611c69565b80915050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612e9e84612b7c565b9350801983169250808416831791505092915050565b612ebd82612968565b612ed0612ec98261298a565b8354612e72565b8255505050565b612ee081611e5a565b8114612eeb57600080fd5b50565b60008135612efb81612ed7565b80915050919050565b600060ff612f1184612b7c565b9350801983169250808416831791505092915050565b6000612f3282611e5a565b9050919050565b6000819050919050565b612f4c82612f27565b612f5f612f5882612f39565b8354612f04565b8255505050565b60008160081b9050919050565b600061ff00612f8184612f66565b9350801983169250808416831791505092915050565b612fa082612f27565b612fb3612fac82612f39565b8354612f73565b8255505050565b6000810160008301612fcc818561286c565b612fd7818386612b56565b50505050600181016020830180612fed81612b66565b9050612ff98184612c0f565b505050600281016040830161300e8185612c32565b613019818386612e4c565b50505050600381016060830161302f818561286c565b61303a818386612b56565b5050505060048101608083018061305081612e5c565b905061305c8184612eb4565b5050506005810160a083018061307181612e5c565b905061307d8184612eb4565b5050506006810160c083018061309281612eee565b905061309e8184612f43565b5050506006810160e08301806130b381612eee565b90506130bf8184612f97565b5050505050565b6130d08282612fba565b5050565b60006130df82611c5f565b91506130ea83611c5f565b9250828210156130fd576130fc6127d5565b5b828203905092915050565b7f4f6e6c7920617574686f7220616c6c6f77656420746f2064656c65746520746860008201527f65697220636f7572736500000000000000000000000000000000000000000000602082015250565b6000613164602a8361220c565b915061316f82613108565b604082019050919050565b6000602082019050818103600083015261319381613157565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006131f660268361220c565b91506132018261319a565b604082019050919050565b60006020820190508181036000830152613225816131e9565b9050919050565b7f496e76616c696420636f75727365496400000000000000000000000000000000600082015250565b600061326260108361220c565b915061326d8261322c565b602082019050919050565b6000602082019050818103600083015261329181613255565b9050919050565b7f436f757273652064656c65746564000000000000000000000000000000000000600082015250565b60006132ce600e8361220c565b91506132d982613298565b602082019050919050565b600060208201905081810360008301526132fd816132c1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061333a60208361220c565b915061334582613304565b602082019050919050565b600060208201905081810360008301526133698161332d565b905091905056fea264697066735822122086341589ec91430c98ff740b7a6bae888c73f3b057e094d41c169089a9a1c08164736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c80638af92aca1161008a5780639d7eb375116100595780639d7eb375146103305780639dad8d2214610359578063f2fde38b14610382578063f57d585b146103ab576100f3565b80638af92aca1461026e5780638da5cb5b1461029757806396f979d2146102c257806397f6c23e14610305576100f3565b806348ab214a116100c657806348ab214a146101b057806367100e88146101ee5780636e04ff0d14610219578063715018a614610257576100f3565b80630b91e28d146100f857806334e85f7814610135578063450043101461015e5780634585e33b14610187575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a9190611c95565b6103c7565b60405161012c9190611f33565b60405180910390f35b34801561014157600080fd5b5061015c60048036038101906101579190612029565b61063d565b005b34801561016a57600080fd5b5061018560048036038101906101809190612119565b6107a5565b005b34801561019357600080fd5b506101ae60048036038101906101a99190612166565b610abb565b005b3480156101bc57600080fd5b506101d760048036038101906101d291906121df565b610b9a565b6040516101e5929190612265565b60405180910390f35b3480156101fa57600080fd5b50610203610c53565b6040516102109190612415565b60405180910390f35b34801561022557600080fd5b50610240600480360381019061023b9190612166565b610fdc565b60405161024e92919061248c565b60405180910390f35b34801561026357600080fd5b5061026c61104b565b005b34801561027a57600080fd5b50610295600480360381019061029091906124e1565b61105f565b005b3480156102a357600080fd5b506102ac6110e5565b6040516102b99190612539565b60405180910390f35b3480156102ce57600080fd5b506102e960048036038101906102e49190611c95565b61110e565b6040516102fc9796959493929190612563565b60405180910390f35b34801561031157600080fd5b5061031a6112aa565b6040516103279190612415565b60405180910390f35b34801561033c57600080fd5b5061035760048036038101906103529190612119565b611633565b005b34801561036557600080fd5b50610380600480360381019061037b9190611c95565b611676565b005b34801561038e57600080fd5b506103a960048036038101906103a491906121df565b611738565b005b6103c560048036038101906103c09190611c95565b6117bc565b005b6103cf611a80565b6103d8826118b2565b604051806101000160405290816000820180546103f49061260f565b80601f01602080910402602001604051908101604052809291908181526020018280546104209061260f565b801561046d5780601f106104425761010080835404028352916020019161046d565b820191906000526020600020905b81548152906001019060200180831161045057829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561055157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610507575b5050505050815260200160038201805461056a9061260f565b80601f01602080910402602001604051908101604052809291908181526020018280546105969061260f565b80156105e35780601f106105b8576101008083540402835291602001916105e3565b820191906000526020600020905b8154815290600101906020018083116105c657829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff1615151515815250509050919050565b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152509050600081878760405160200161068e939291906126b1565b6040516020818303038152906040528051906020012090506000600182858888604051600081526020016040526040516106cb94939291906126f5565b6020604051602081039080840390855afa1580156106ed573d6000803e3d6000fd5b5050506020604051035190503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075e90612786565b60405180910390fd5b610770336118ee565b600201899080600181540180825580915050600190039060005260206000200160009091909190915055505050505050505050565b60006107b0336118ee565b6040518060a00160405290816000820180546107cb9061260f565b80601f01602080910402602001604051908101604052809291908181526020018280546107f79061260f565b80156108445780601f1061081957610100808354040283529160200191610844565b820191906000526020600020905b81548152906001019060200180831161082757829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561089c57602002820191906000526020600020905b815481526020019060010190808311610888575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156108f457602002820191906000526020600020905b8154815260200190600101908083116108e0575b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561094c57602002820191906000526020600020905b815481526020019060010190808311610938575b505050505081526020016004820160009054906101000a900460ff161515151581525050905080608001511561098157600080fd5b82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508160000181905250600181608001901515908115158152505080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610a3b929190611adf565b506020820151816001019080519060200190610a58929190611b65565b506040820151816002019080519060200190610a75929190611b65565b506060820151816003019080519060200190610a92929190611b65565b5060808201518160040160006101000a81548160ff021916908315150217905550905050505050565b6000600190505b6001805490508160ff161015610b955760018160ff1681548110610ae957610ae86127a6565b5b90600052602060002090600702016005015442118015610b3c575060018160ff1681548110610b1b57610b1a6127a6565b5b906000526020600020906007020160060160019054906101000a900460ff16155b15610b82576001808260ff1681548110610b5957610b586127a6565b5b906000526020600020906007020160060160006101000a81548160ff0219169083151502179055505b8080610b8d90612804565b915050610ac2565b505050565b6002602052806000526040600020600091509050806000018054610bbd9061260f565b80601f0160208091040260200160405190810160405280929190818152602001828054610be99061260f565b8015610c365780601f10610c0b57610100808354040283529160200191610c36565b820191906000526020600020905b815481529060010190602001808311610c1957829003601f168201915b5050505050908060040160009054906101000a900460ff16905082565b60606000610c60336118ee565b9050806001018054905067ffffffffffffffff811115610c8357610c8261282e565b5b604051908082528060200260200182016040528015610cbc57816020015b610ca9611a80565b815260200190600190039081610ca15790505b50915060005b81600101805490508160ff161015610fd7576000826001018260ff1681548110610cef57610cee6127a6565b5b906000526020600020015414610fc4576001826001018260ff1681548110610d1a57610d196127a6565b5b906000526020600020015481548110610d3657610d356127a6565b5b906000526020600020906007020160405180610100016040529081600082018054610d609061260f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8c9061260f565b8015610dd95780601f10610dae57610100808354040283529160200191610dd9565b820191906000526020600020905b815481529060010190602001808311610dbc57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015610ebd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e73575b50505050508152602001600382018054610ed69061260f565b80601f0160208091040260200160405190810160405280929190818152602001828054610f029061260f565b8015610f4f5780601f10610f2457610100808354040283529160200191610f4f565b820191906000526020600020905b815481529060010190602001808311610f3257829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff161515151581525050838260ff1681518110610fb857610fb76127a6565b5b60200260200101819052505b8080610fcf90612804565b915050610cc2565b505090565b600060606000600190505b6001805490508160ff1610156110435760018160ff168154811061100e5761100d6127a6565b5b9060005260206000209060070201600501544211156110305760019250611043565b808061103b90612804565b915050610fe7565b509250929050565b611053611936565b61105d60006119b4565b565b600061106a336118ee565b9050600182908060018154018082558091505060019003906000526020600020906007020160009091909190915081816110a491906130c6565b505080600301600180805490506110bb91906130d4565b90806001815401808255809150506001900390600052602060002001600090919091909150555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001818154811061111e57600080fd5b90600052602060002090600702016000915090508060000180546111419061260f565b80601f016020809104026020016040519081016040528092919081815260200182805461116d9061260f565b80156111ba5780601f1061118f576101008083540402835291602001916111ba565b820191906000526020600020905b81548152906001019060200180831161119d57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030180546111f59061260f565b80601f01602080910402602001604051908101604052809291908181526020018280546112219061260f565b801561126e5780601f106112435761010080835404028352916020019161126e565b820191906000526020600020905b81548152906001019060200180831161125157829003601f168201915b5050505050908060040154908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16905087565b606060006112b7336118ee565b9050806003018054905067ffffffffffffffff8111156112da576112d961282e565b5b60405190808252806020026020018201604052801561131357816020015b611300611a80565b8152602001906001900390816112f85790505b50915060005b81600301805490508160ff16101561162e576000826003018260ff1681548110611346576113456127a6565b5b90600052602060002001541461161b576001826003018260ff1681548110611371576113706127a6565b5b90600052602060002001548154811061138d5761138c6127a6565b5b9060005260206000209060070201604051806101000160405290816000820180546113b79061260f565b80601f01602080910402602001604051908101604052809291908181526020018280546113e39061260f565b80156114305780601f1061140557610100808354040283529160200191611430565b820191906000526020600020905b81548152906001019060200180831161141357829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561151457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114ca575b5050505050815260200160038201805461152d9061260f565b80601f01602080910402602001604051908101604052809291908181526020018280546115599061260f565b80156115a65780601f1061157b576101008083540402835291602001916115a6565b820191906000526020600020905b81548152906001019060200180831161158957829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff161515151581525050838260ff168151811061160f5761160e6127a6565b5b60200260200101819052505b808061162690612804565b915050611319565b505090565b61163c336118ee565b60040160009054906101000a900460ff1661165657600080fd5b8181611661336118ee565b6000019190611671929190611bb2565b505050565b61167f816118b2565b60010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611710576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117079061317a565b60405180910390fd5b600161171b826118b2565b60060160016101000a81548160ff02191690831515021790555050565b611740611936565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a79061320c565b60405180910390fd5b6117b9816119b4565b50565b60006117c7336118ee565b90506001805490508210611810576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180790613278565b60405180910390fd5b60018281548110611824576118236127a6565b5b906000526020600020906007020160060160019054906101000a900460ff1615611883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187a906132e4565b60405180910390fd5b806001018290806001815401808255809150506001900390600052602060002001600090919091909150555050565b600060018054905082106118c557600080fd5b600182815481106118d9576118d86127a6565b5b90600052602060002090600702019050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050919050565b61193e611a78565b73ffffffffffffffffffffffffffffffffffffffff1661195c6110e5565b73ffffffffffffffffffffffffffffffffffffffff16146119b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a990613350565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180610100016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160008152602001600081526020016000151581526020016000151581525090565b828054611aeb9061260f565b90600052602060002090601f016020900481019282611b0d5760008555611b54565b82601f10611b2657805160ff1916838001178555611b54565b82800160010185558215611b54579182015b82811115611b53578251825591602001919060010190611b38565b5b509050611b619190611c38565b5090565b828054828255906000526020600020908101928215611ba1579160200282015b82811115611ba0578251825591602001919060010190611b85565b5b509050611bae9190611c38565b5090565b828054611bbe9061260f565b90600052602060002090601f016020900481019282611be05760008555611c27565b82601f10611bf957803560ff1916838001178555611c27565b82800160010185558215611c27579182015b82811115611c26578235825591602001919060010190611c0b565b5b509050611c349190611c38565b5090565b5b80821115611c51576000816000905550600101611c39565b5090565b600080fd5b600080fd5b6000819050919050565b611c7281611c5f565b8114611c7d57600080fd5b50565b600081359050611c8f81611c69565b92915050565b600060208284031215611cab57611caa611c55565b5b6000611cb984828501611c80565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611cfc578082015181840152602081019050611ce1565b83811115611d0b576000848401525b50505050565b6000601f19601f8301169050919050565b6000611d2d82611cc2565b611d378185611ccd565b9350611d47818560208601611cde565b611d5081611d11565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d8682611d5b565b9050919050565b611d9681611d7b565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611dd48383611d8d565b60208301905092915050565b6000602082019050919050565b6000611df882611d9c565b611e028185611da7565b9350611e0d83611db8565b8060005b83811015611e3e578151611e258882611dc8565b9750611e3083611de0565b925050600181019050611e11565b5085935050505092915050565b611e5481611c5f565b82525050565b60008115159050919050565b611e6f81611e5a565b82525050565b6000610100830160008301518482036000860152611e938282611d22565b9150506020830151611ea86020860182611d8d565b5060408301518482036040860152611ec08282611ded565b91505060608301518482036060860152611eda8282611d22565b9150506080830151611eef6080860182611e4b565b5060a0830151611f0260a0860182611e4b565b5060c0830151611f1560c0860182611e66565b5060e0830151611f2860e0860182611e66565b508091505092915050565b60006020820190508181036000830152611f4d8184611e75565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611f7a57611f79611f55565b5b8235905067ffffffffffffffff811115611f9757611f96611f5a565b5b602083019150836001820283011115611fb357611fb2611f5f565b5b9250929050565b6000819050919050565b611fcd81611fba565b8114611fd857600080fd5b50565b600081359050611fea81611fc4565b92915050565b600060ff82169050919050565b61200681611ff0565b811461201157600080fd5b50565b60008135905061202381611ffd565b92915050565b60008060008060008060a0878903121561204657612045611c55565b5b600061205489828a01611c80565b965050602087013567ffffffffffffffff81111561207557612074611c5a565b5b61208189828a01611f64565b9550955050604061209489828a01611fdb565b93505060606120a589828a01611fdb565b92505060806120b689828a01612014565b9150509295509295509295565b60008083601f8401126120d9576120d8611f55565b5b8235905067ffffffffffffffff8111156120f6576120f5611f5a565b5b60208301915083600182028301111561211257612111611f5f565b5b9250929050565b600080602083850312156121305761212f611c55565b5b600083013567ffffffffffffffff81111561214e5761214d611c5a565b5b61215a858286016120c3565b92509250509250929050565b6000806020838503121561217d5761217c611c55565b5b600083013567ffffffffffffffff81111561219b5761219a611c5a565b5b6121a785828601611f64565b92509250509250929050565b6121bc81611d7b565b81146121c757600080fd5b50565b6000813590506121d9816121b3565b92915050565b6000602082840312156121f5576121f4611c55565b5b6000612203848285016121ca565b91505092915050565b600082825260208201905092915050565b600061222882611cc2565b612232818561220c565b9350612242818560208601611cde565b61224b81611d11565b840191505092915050565b61225f81611e5a565b82525050565b6000604082019050818103600083015261227f818561221d565b905061228e6020830184612256565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006101008301600083015184820360008601526122df8282611d22565b91505060208301516122f46020860182611d8d565b506040830151848203604086015261230c8282611ded565b915050606083015184820360608601526123268282611d22565b915050608083015161233b6080860182611e4b565b5060a083015161234e60a0860182611e4b565b5060c083015161236160c0860182611e66565b5060e083015161237460e0860182611e66565b508091505092915050565b600061238b83836122c1565b905092915050565b6000602082019050919050565b60006123ab82612295565b6123b581856122a0565b9350836020820285016123c7856122b1565b8060005b8581101561240357848403895281516123e4858261237f565b94506123ef83612393565b925060208a019950506001810190506123cb565b50829750879550505050505092915050565b6000602082019050818103600083015261242f81846123a0565b905092915050565b600081519050919050565b600082825260208201905092915050565b600061245e82612437565b6124688185612442565b9350612478818560208601611cde565b61248181611d11565b840191505092915050565b60006040820190506124a16000830185612256565b81810360208301526124b38184612453565b90509392505050565b600080fd5b600061010082840312156124d8576124d76124bc565b5b81905092915050565b6000602082840312156124f7576124f6611c55565b5b600082013567ffffffffffffffff81111561251557612514611c5a565b5b612521848285016124c1565b91505092915050565b61253381611d7b565b82525050565b600060208201905061254e600083018461252a565b92915050565b61255d81611c5f565b82525050565b600060e082019050818103600083015261257d818a61221d565b905061258c602083018961252a565b818103604083015261259e818861221d565b90506125ad6060830187612554565b6125ba6080830186612554565b6125c760a0830185612256565b6125d460c0830184612256565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061262757607f821691505b6020821081141561263b5761263a6125e0565b5b50919050565b600081905092915050565b600061265782612437565b6126618185612641565b9350612671818560208601611cde565b80840191505092915050565b82818337600083830152505050565b60006126988385612641565b93506126a583858461267d565b82840190509392505050565b60006126bd828661264c565b91506126ca82848661268c565b9150819050949350505050565b6126e081611fba565b82525050565b6126ef81611ff0565b82525050565b600060808201905061270a60008301876126d7565b61271760208301866126e6565b61272460408301856126d7565b61273160608301846126d7565b95945050505050565b7f496e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b600061277060118361220c565b915061277b8261273a565b602082019050919050565b6000602082019050818103600083015261279f81612763565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061280f82611ff0565b915060ff821415612823576128226127d5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126128895761288861285d565b5b80840192508235915067ffffffffffffffff8211156128ab576128aa612862565b5b6020830192506001820236038313156128c7576128c6612867565b5b509250929050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261293c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826128ff565b61294686836128ff565b95508019841693508086168417925050509392505050565b6000819050919050565b600061298361297e61297984611c5f565b61295e565b611c5f565b9050919050565b6000819050919050565b61299d83612968565b6129b16129a98261298a565b84845461290c565b825550505050565b600090565b6129c66129b9565b6129d1818484612994565b505050565b5b818110156129f5576129ea6000826129be565b6001810190506129d7565b5050565b601f821115612a3a57612a0b816128da565b612a14846128ef565b81016020851015612a23578190505b612a37612a2f856128ef565b8301826129d6565b50505b505050565b600082821c905092915050565b6000612a5d60001984600802612a3f565b1980831691505092915050565b6000612a768383612a4c565b9150826002028217905092915050565b612a9083836128cf565b67ffffffffffffffff811115612aa957612aa861282e565b5b612ab3825461260f565b612abe8282856129f9565b6000601f831160018114612aed5760008415612adb578287013590505b612ae58582612a6a565b865550612b4d565b601f198416612afb866128da565b60005b82811015612b2357848901358255600182019150602085019450602081019050612afe565b86831015612b405784890135612b3c601f891682612a4c565b8355505b6001600288020188555050505b50505050505050565b612b61838383612a86565b505050565b60008135612b73816121b3565b80915050919050565b60008160001b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff612ba984612b7c565b9350801983169250808416831791505092915050565b6000612bda612bd5612bd084611d5b565b61295e565b611d5b565b9050919050565b6000612bec82612bbf565b9050919050565b6000612bfe82612be1565b9050919050565b6000819050919050565b612c1882612bf3565b612c2b612c2482612c05565b8354612b89565b8255505050565b60008083356001602003843603038112612c4f57612c4e61285d565b5b80840192508235915067ffffffffffffffff821115612c7157612c70612862565b5b602083019250602082023603831315612c8d57612c8c612867565b5b509250929050565b6000819050919050565b600081549050919050565b60008190506001806001038301049050919050565b60008190508160005260206000209050919050565b5b81811015612cf357612ce86000826129be565b600181019050612cd5565b5050565b81831015612d3057612d0882612caa565b612d1184612caa565b612d1a83612cbf565b818101838201612d2a8183612cd4565b50505050505b505050565b68010000000000000000821115612d4f57612d4e61282e565b5b612d5881612c9f565b828255612d66838284612cf7565b505050565b600082905092915050565b600060088302612d9a73ffffffffffffffffffffffffffffffffffffffff826128ff565b612da486836128ff565b95508019841693508086168417925050509392505050565b612dc583612bf3565b612dd9612dd182612c05565b848454612d76565b825550505050565b612deb8383612d6b565b612df58183612d35565b612dfe83612c95565b612e0783612cbf565b6000805b84811015612e425783612e1d81612b66565b9050612e2a818486612dbc565b60208501945060018401935050600181019050612e0b565b5050505050505050565b612e57838383612de1565b505050565b60008135612e6981611c69565b80915050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612e9e84612b7c565b9350801983169250808416831791505092915050565b612ebd82612968565b612ed0612ec98261298a565b8354612e72565b8255505050565b612ee081611e5a565b8114612eeb57600080fd5b50565b60008135612efb81612ed7565b80915050919050565b600060ff612f1184612b7c565b9350801983169250808416831791505092915050565b6000612f3282611e5a565b9050919050565b6000819050919050565b612f4c82612f27565b612f5f612f5882612f39565b8354612f04565b8255505050565b60008160081b9050919050565b600061ff00612f8184612f66565b9350801983169250808416831791505092915050565b612fa082612f27565b612fb3612fac82612f39565b8354612f73565b8255505050565b6000810160008301612fcc818561286c565b612fd7818386612b56565b50505050600181016020830180612fed81612b66565b9050612ff98184612c0f565b505050600281016040830161300e8185612c32565b613019818386612e4c565b50505050600381016060830161302f818561286c565b61303a818386612b56565b5050505060048101608083018061305081612e5c565b905061305c8184612eb4565b5050506005810160a083018061307181612e5c565b905061307d8184612eb4565b5050506006810160c083018061309281612eee565b905061309e8184612f43565b5050506006810160e08301806130b381612eee565b90506130bf8184612f97565b5050505050565b6130d08282612fba565b5050565b60006130df82611c5f565b91506130ea83611c5f565b9250828210156130fd576130fc6127d5565b5b828203905092915050565b7f4f6e6c7920617574686f7220616c6c6f77656420746f2064656c65746520746860008201527f65697220636f7572736500000000000000000000000000000000000000000000602082015250565b6000613164602a8361220c565b915061316f82613108565b604082019050919050565b6000602082019050818103600083015261319381613157565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006131f660268361220c565b91506132018261319a565b604082019050919050565b60006020820190508181036000830152613225816131e9565b9050919050565b7f496e76616c696420636f75727365496400000000000000000000000000000000600082015250565b600061326260108361220c565b915061326d8261322c565b602082019050919050565b6000602082019050818103600083015261329181613255565b9050919050565b7f436f757273652064656c65746564000000000000000000000000000000000000600082015250565b60006132ce600e8361220c565b91506132d982613298565b602082019050919050565b600060208201905081810360008301526132fd816132c1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061333a60208361220c565b915061334582613304565b602082019050919050565b600060208201905081810360008301526133698161332d565b905091905056fea264697066735822122086341589ec91430c98ff740b7a6bae888c73f3b057e094d41c169089a9a1c08164736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 65,
        "contract": "contracts/DeEduCore.sol:DeEdu",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2021,
        "contract": "contracts/DeEduCore.sol:DeEdu",
        "label": "courses",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Course)2003_storage)dyn_storage"
      },
      {
        "astId": 2026,
        "contract": "contracts/DeEduCore.sol:DeEdu",
        "label": "usersMapping",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(User)2017_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Course)2003_storage)dyn_storage": {
        "base": "t_struct(Course)2003_storage",
        "encoding": "dynamic_array",
        "label": "struct DeEdu.Course[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(User)2017_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct DeEdu.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)2017_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Course)2003_storage": {
        "encoding": "inplace",
        "label": "struct DeEdu.Course",
        "members": [
          {
            "astId": 1987,
            "contract": "contracts/DeEduCore.sol:DeEdu",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 1989,
            "contract": "contracts/DeEduCore.sol:DeEdu",
            "label": "author",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1992,
            "contract": "contracts/DeEduCore.sol:DeEdu",
            "label": "students",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1994,
            "contract": "contracts/DeEduCore.sol:DeEdu",
            "label": "courseMaterial",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 1996,
            "contract": "contracts/DeEduCore.sol:DeEdu",
            "label": "stakeAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1998,
            "contract": "contracts/DeEduCore.sol:DeEdu",
            "label": "courseEndDateTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 2000,
            "contract": "contracts/DeEduCore.sol:DeEdu",
            "label": "ended",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 2002,
            "contract": "contracts/DeEduCore.sol:DeEdu",
            "label": "deleted",
            "offset": 1,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(User)2017_storage": {
        "encoding": "inplace",
        "label": "struct DeEdu.User",
        "members": [
          {
            "astId": 2005,
            "contract": "contracts/DeEduCore.sol:DeEdu",
            "label": "userDetailsURI",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 2008,
            "contract": "contracts/DeEduCore.sol:DeEdu",
            "label": "enrolledCourses",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 2011,
            "contract": "contracts/DeEduCore.sol:DeEdu",
            "label": "completedCourses",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 2014,
            "contract": "contracts/DeEduCore.sol:DeEdu",
            "label": "createdCourses",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 2016,
            "contract": "contracts/DeEduCore.sol:DeEdu",
            "label": "exists",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}